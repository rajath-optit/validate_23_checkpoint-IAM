#IAM 25 MAIN CHECKPOINT COMPLETED ---------> DONE

#23 CHECKPOINT PROVIDED HAS BEEN AUTOMATED ----------> DONE

1. Compute Services:
   - Amazon EC2 (Elastic Compute Cloud) ----------> PROGRESS
                                                                                          CHECKPOINTS
                                                                                          1. Security Group Configuration ------------->DONE
                                                                                          2. Network ACLs Setup ------------->DONE
                                                                                          3. IAM Roles and Policies Review ------------->DONE
                                                                                          4. Instance Metadata Service Protection ------------->DONE
                                                                                          5. Data Encryption ------------->DONE
                                                                                          6. Optimized Instance Types ------------->DONE
                                                                                          7. Operating System Updates ------------->DONE
                                                                                          8. Backup and Disaster Recovery ------------->DONE
                                                                                          9. Monitoring and Logging Implementation ------------->DONE
                                                                                          10. Anti-Malware and Intrusion Detection 
                                                                                          11. VPC Peering and VPN Configuration 
                                                                                          12. SSH Key Management Practices ------------->DONE
                                                                                          13. File Integrity Monitoring 
                                                                                          14. Automated Remediation Actions ------------->DONE
                                                                                          15. Third-Party Security Tools Integration ------------->DONE

   - AWS Lambda
                                                                                          CHECKPOINTS
                                                                                          1.   Function Execution Permissions  
                                                                                          2.   Least Privilege Principle  
                                                                                          3.   VPC Configuration and Isolation  
                                                                                          4.   Environment Variable Security  
                                                                                          5.   Code Signing and Integrity  
                                                                                          6.   Monitoring and Logging Setup  
                                                                                          7.   Concurrency and Throttling Controls  
                                                                                          8.   Error Handling and Exception Management  
                                                                                          9.   Cold Start Optimization  
                                                                                          10.  Dependency Vulnerability Scanning  
                                                                                          11.  Secure Deployment Pipelines  
                                                                                          12.  Resource Limits and Timeout Settings  
                                                                                          13.  Access Control via API Gateway  
                                                                                          14.  Encryption of Data in Transit and At Rest  
                                                                                          15.  Runtime Environment Patching and Updates  

   - Amazon ECS (Elastic Container Service)
   - AWS Batch
   - AWS Elastic Beanstalk

2. Storage Services:
   - Amazon S3 (Simple Storage Service)
                                                                                          CHECKPOINTS
                                                                                          1.   Bucket Access Control Policies  
                                                                                          2.   Cross-Origin Resource Sharing (CORS) Configuration  
                                                                                          3.   Bucket Logging and Monitoring  
                                                                                          4.   Server-Side Encryption Settings  
                                                                                          5.   Object Versioning and MFA Delete  
                                                                                          6.   Bucket Policy Permissions  
                                                                                          7.   Lifecycle Policies for Object Expiration  
                                                                                          8.   Secure Access Logging Configuration  
                                                                                          9.   Bucket Policy Conditions  
                                                                                          10.   Public Access Block Settings  
                                                                                          11.   Bucket Replication Configuration  
                                                                                          12.   Event Notifications and Event Triggers  
                                                                                          13.   Data Transfer Encryption  
                                                                                          14.   Access Control via Bucket Policies vs. IAM Policies  
                                                                                          15.   Bucket Tagging for Resource Management                                                                              
   - Amazon EBS (Elastic Block Store)
   - Amazon EFS (Elastic File System)
   - AWS Glacier
   - AWS Storage Gateway

3. Database Services:
   - Amazon RDS (Relational Database Service)
   - Amazon DynamoDB
   - Amazon Redshift
   - Amazon Aurora
   - Amazon ElastiCache

4. Networking Services:
   - Amazon VPC (Virtual Private Cloud)
   - Amazon Route 53
   - AWS Direct Connect
   - Amazon CloudFront
   - AWS Global Accelerator

5. Security, Identity, and Compliance:
   - AWS IAM (Identity and Access Management)
   - AWS KMS (Key Management Service)
   - AWS Secrets Manager
   - Amazon GuardDuty
   - AWS WAF (Web Application Firewall)



import boto3

def check_network_acl_configurations():
    # Initialize the AWS EC2 client
    ec2_client = boto3.client('ec2')

    # Retrieve all network ACLs
    response = ec2_client.describe_network_acls()

    # Print the header for the table
    print("=" * 97)
    print("| {:<20} | {:<12} | {:<12} | {:<8} | {:<11} | {:<15} | {:<7} |".format(
        "Network ACL ID", "Default ACL", "Rule Number", "Protocol", "Port Range", "CIDR Block", "Action"
    ))
    print("=" * 97)

    # Iterate over each network ACL
    for acl in response['NetworkAcls']:
        acl_id = acl['NetworkAclId']
        is_default = acl['IsDefault']

        # Iterate over each entry in the network ACL
        for entry in acl['Entries']:
            rule_number = entry['RuleNumber']
            protocol = entry['Protocol']
            port_range = f"{entry.get('PortRange', {}).get('From', 'N/A')} - {entry.get('PortRange', {}).get('To', 'N/A')}"
            cidr_block = entry['CidrBlock']
            action = entry['RuleAction']

            # Print the entry details
            print("| {:<20} | {:<12} | {:<12} | {:<8} | {:<11} | {:<15} | {:<7} |".format(
                acl_id, "Yes" if is_default else "No", rule_number, protocol, port_range, cidr_block, action
            ))

    # Print the bottom border of the table
    print("=" * 97)

if __name__ == "__main__":
    print("Network ACLs Configuration:")
    check_network_acl_configurations()


output:

Network ACLs Configuration:
=================================================================================================
| Network ACL ID       | Default ACL | Rule Number | Protocol | Port Range | CIDR Block     | Action |
=================================================================================================
| acl-1234567890abcdef0 | No          | 100         | TCP      | 80 - 80    | 0.0.0.0/0      | Allow  |
|                       |             | 200         | TCP      | 443 - 443  | 0.0.0.0/0      | Allow  |
-------------------------------------------------------------------------------------------------
| acl-0987654321fedcba0 | Yes         | 100         | All      | N/A - N/A  | 0.0.0.0/0      | Allow  |
|                       |             | 32767       | All      | N/A - N/A  | 0.0.0.0/0      | Deny   |
=================================================================================================
